<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>